NDFramePage.OnPageTitleLoaded("File:MicroStrain/Wireless/WirelessNode.h","WirelessNode.h");NDSummary.OnSummaryLoaded("File:MicroStrain/Wireless/WirelessNode.h",[["C/C++","C"]],[["Classes","Class"],["Functions","Function"],["Groups","Group"],["Variables","Variable"]],[[3295,0,0,"WirelessNode","WirelessNode"],[3296,0,2,"Functions","WirelessNode.Functions"],[3297,0,1,"WirelessNode","WirelessNode.WirelessNode"],[3298,0,1,"~WirelessNode","WirelessNode.~WirelessNode"],[3299,0,2,"Variables","WirelessNode.Variables"],[3300,0,3,"m_impl","WirelessNode.m_impl"],[3301,0,2,"Functions","WirelessNode.Functions(2)"],[3302,0,1,"deviceName","WirelessNode.deviceName"],[3303,0,1,"features","WirelessNode.features"],[3304,0,1,"lastCommunicationTime","WirelessNode.lastCommunicationTime"],[3305,0,1,"setBaseStation","WirelessNode.setBaseStation"],[3306,0,1,"getBaseStation","WirelessNode.getBaseStation"],[3307,0,1,"hasBaseStation","WirelessNode.hasBaseStation"],[3308,0,1,"useGroupRead","WirelessNode.useGroupRead"],[3309,0,1,"readWriteRetries","WirelessNode.readWriteRetries"],[3310,0,1,"useEepromCache","WirelessNode.useEepromCache"],[3311,0,1,"clearEepromCache","WirelessNode.clearEepromCache"],[3312,0,1,"nodeAddress","WirelessNode.nodeAddress"],[3313,0,1,"frequency","WirelessNode.frequency"],[3314,0,1,"firmwareVersion","WirelessNode.firmwareVersion"],[3315,0,1,"model","WirelessNode.model"],[3316,0,1,"serial","WirelessNode.serial"],[3317,0,1,"name","WirelessNode.name"],[3318,0,1,"microcontroller","WirelessNode.microcontroller"],[3319,0,1,"radioFeatures","WirelessNode.radioFeatures"],[3320,0,1,"dataStorageSize","WirelessNode.dataStorageSize"],[3321,0,1,"regionCode","WirelessNode.regionCode"],[3322,0,1,"quickPing","WirelessNode.quickPing"],[3323,0,1,"ping","WirelessNode.ping"],[3324,0,1,"sleep","WirelessNode.sleep"],[3325,0,1,"cyclePower","WirelessNode.cyclePower"],[3326,0,1,"resetRadio","WirelessNode.resetRadio"],[3327,0,1,"changeFrequency","WirelessNode.changeFrequency"],[3328,0,1,"setToIdle","WirelessNode.setToIdle"],[3329,0,1,"erase","WirelessNode.erase"],[3330,0,1,"startNonSyncSampling","WirelessNode.startNonSyncSampling"],[3331,0,1,"clearHistogram","WirelessNode.clearHistogram"],[3332,0,1,"autoBalance","WirelessNode.autoBalance"],[3333,0,1,"autoCal_shmLink","WirelessNode.autoCal_shmLink"],[3334,0,1,"readEeprom","WirelessNode.readEeprom"],[3335,0,1,"writeEeprom","WirelessNode.writeEeprom"],[3336,0,1,"verifyConfig","WirelessNode.verifyConfig"],[3337,0,1,"applyConfig","WirelessNode.applyConfig"],[3338,0,1,"getNumDatalogSessions","WirelessNode.getNumDatalogSessions"],[3339,0,1,"getDefaultMode","WirelessNode.getDefaultMode"],[3340,0,1,"getInactivityTimeout","WirelessNode.getInactivityTimeout"],[3341,0,1,"getCheckRadioInterval","WirelessNode.getCheckRadioInterval"],[3342,0,1,"getTransmitPower","WirelessNode.getTransmitPower"],[3343,0,1,"getSamplingMode","WirelessNode.getSamplingMode"],[3344,0,1,"getActiveChannels","WirelessNode.getActiveChannels"],[3345,0,1,"getSampleRate","WirelessNode.getSampleRate"],[3346,0,1,"getNumSweeps","WirelessNode.getNumSweeps"],[3347,0,1,"getUnlimitedDuration","WirelessNode.getUnlimitedDuration"],[3348,0,1,"getDataFormat","WirelessNode.getDataFormat"],[3349,0,1,"getDataCollectionMethod","WirelessNode.getDataCollectionMethod"],[3350,0,1,"getTimeBetweenBursts","WirelessNode.getTimeBetweenBursts"],[3351,0,1,"getLostBeaconTimeout","WirelessNode.getLostBeaconTimeout"],[3352,0,1,"getHardwareGain","WirelessNode.getHardwareGain"],[3353,0,1,"getHardwareOffset","WirelessNode.getHardwareOffset"],[3354,0,1,"getGaugeFactor","WirelessNode.getGaugeFactor"],[3355,0,1,"getLinearEquation","WirelessNode.getLinearEquation"],[3356,0,1,"getUnit","WirelessNode.getUnit"],[3357,0,1,"getEquationType","WirelessNode.getEquationType"],[3358,0,1,"getFilterSettlingTime","WirelessNode.getFilterSettlingTime"],[3359,0,1,"getThermocoupleType","WirelessNode.getThermocoupleType"],[3360,0,1,"getFatigueOptions","WirelessNode.getFatigueOptions"],[3361,0,1,"getHistogramOptions","WirelessNode.getHistogramOptions"],[3362,0,1,"getActivitySense","WirelessNode.getActivitySense"]]);